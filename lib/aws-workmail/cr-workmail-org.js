"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = void 0;
const client_workmail_1 = require("@aws-sdk/client-workmail");
/** Create WorkMail Organization */
const createOrg = async (region, alias) => {
    const client = new client_workmail_1.WorkMailClient({ region });
    const cmd = new client_workmail_1.CreateOrganizationCommand({ Alias: alias });
    try {
        const output = await client.send(cmd);
        return output;
    }
    catch (err) {
        console.error(err);
        throw err;
    }
    finally {
        client.destroy();
    }
};
/** Delete WorkMail Organization */
const deleteOrg = async (region, organizationId) => {
    const client = new client_workmail_1.WorkMailClient({ region });
    const cmd = new client_workmail_1.DeleteOrganizationCommand({ OrganizationId: organizationId, DeleteDirectory: true });
    try {
        await client.send(cmd);
        return;
    }
    catch (err) {
        console.error(err);
        throw err;
    }
    finally {
        client.destroy();
    }
};
const handler = async (event, _context) => {
    const region = event.ResourceProperties.Region;
    const alias = event.ResourceProperties.Alias;
    switch (event.RequestType) {
        case 'Create': {
            const output = await createOrg(region, alias);
            return { PhysicalResourceId: output.OrganizationId, Data: output };
        }
        case 'Update': {
            const oldOrgId = event.PhysicalResourceId;
            const output = await createOrg(region, alias);
            await deleteOrg(region, oldOrgId);
            return { PhysicalResourceId: output.OrganizationId, Data: output };
        }
        case 'Delete': {
            const oldOrgId = event.PhysicalResourceId;
            await deleteOrg(region, oldOrgId);
            return {};
        }
    }
    ;
};
exports.handler = handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3Itd29ya21haWwtb3JnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F3cy13b3JrbWFpbC9jci13b3JrbWFpbC1vcmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOERBQWdIO0FBR2hILG1DQUFtQztBQUNuQyxNQUFNLFNBQVMsR0FBRyxLQUFLLEVBQUUsTUFBYyxFQUFFLEtBQWEsRUFBRSxFQUFFO0lBQ3hELE1BQU0sTUFBTSxHQUFHLElBQUksZ0NBQWMsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFDOUMsTUFBTSxHQUFHLEdBQUcsSUFBSSwyQ0FBeUIsQ0FBQyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQzVELElBQUk7UUFDRixNQUFNLE1BQU0sR0FBRyxNQUFNLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEMsT0FBTyxNQUFNLENBQUM7S0FDZjtJQUFDLE9BQU8sR0FBRyxFQUFFO1FBQ1osT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuQixNQUFNLEdBQUcsQ0FBQztLQUNYO1lBQVM7UUFDUixNQUFNLENBQUMsT0FBTyxFQUFFLENBQUM7S0FDbEI7QUFDSCxDQUFDLENBQUM7QUFFRixtQ0FBbUM7QUFDbkMsTUFBTSxTQUFTLEdBQUcsS0FBSyxFQUFFLE1BQWMsRUFBRSxjQUFzQixFQUFFLEVBQUU7SUFDakUsTUFBTSxNQUFNLEdBQUcsSUFBSSxnQ0FBYyxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUM5QyxNQUFNLEdBQUcsR0FBRyxJQUFJLDJDQUF5QixDQUFDLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxlQUFlLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUNyRyxJQUFJO1FBQ0YsTUFBTSxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLE9BQU87S0FDUjtJQUFDLE9BQU8sR0FBRyxFQUFFO1FBQ1osT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuQixNQUFNLEdBQUcsQ0FBQztLQUNYO1lBQVM7UUFDUixNQUFNLENBQUMsT0FBTyxFQUFFLENBQUM7S0FDbEI7QUFDSCxDQUFDLENBQUM7QUFFSyxNQUFNLE9BQU8sR0FBNkIsS0FBSyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsRUFBRTtJQUN6RSxNQUFNLE1BQU0sR0FBVyxLQUFLLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDO0lBQ3ZELE1BQU0sS0FBSyxHQUFXLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLENBQUM7SUFFckQsUUFBUSxLQUFLLENBQUMsV0FBVyxFQUFFO1FBQ3pCLEtBQUssUUFBUSxDQUFDLENBQUM7WUFDYixNQUFNLE1BQU0sR0FBRyxNQUFNLFNBQVMsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDOUMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sQ0FBQyxjQUFjLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDO1NBQ3BFO1FBQ0QsS0FBSyxRQUFRLENBQUMsQ0FBQztZQUNiLE1BQU0sUUFBUSxHQUFXLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQztZQUNsRCxNQUFNLE1BQU0sR0FBRyxNQUFNLFNBQVMsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDOUMsTUFBTSxTQUFTLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQ2xDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLENBQUMsY0FBYyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztTQUNwRTtRQUNELEtBQUssUUFBUSxDQUFDLENBQUM7WUFDYixNQUFNLFFBQVEsR0FBVyxLQUFLLENBQUMsa0JBQWtCLENBQUM7WUFDbEQsTUFBTSxTQUFTLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQ2xDLE9BQU8sRUFBRSxDQUFDO1NBQ1g7S0FDRjtJQUFBLENBQUM7QUFDSixDQUFDLENBQUM7QUFyQlcsUUFBQSxPQUFPLFdBcUJsQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdvcmtNYWlsQ2xpZW50LCBDcmVhdGVPcmdhbml6YXRpb25Db21tYW5kLCBEZWxldGVPcmdhbml6YXRpb25Db21tYW5kIH0gZnJvbSAnQGF3cy1zZGsvY2xpZW50LXdvcmttYWlsJztcclxuaW1wb3J0IHsgQ2RrQ3VzdG9tUmVzb3VyY2VIYW5kbGVyIH0gZnJvbSAnYXdzLWxhbWJkYSc7XHJcblxyXG4vKiogQ3JlYXRlIFdvcmtNYWlsIE9yZ2FuaXphdGlvbiAqL1xyXG5jb25zdCBjcmVhdGVPcmcgPSBhc3luYyAocmVnaW9uOiBzdHJpbmcsIGFsaWFzOiBzdHJpbmcpID0+IHtcclxuICBjb25zdCBjbGllbnQgPSBuZXcgV29ya01haWxDbGllbnQoeyByZWdpb24gfSk7XHJcbiAgY29uc3QgY21kID0gbmV3IENyZWF0ZU9yZ2FuaXphdGlvbkNvbW1hbmQoeyBBbGlhczogYWxpYXMgfSk7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IG91dHB1dCA9IGF3YWl0IGNsaWVudC5zZW5kKGNtZCk7XHJcbiAgICByZXR1cm4gb3V0cHV0O1xyXG4gIH0gY2F0Y2ggKGVycikge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgdGhyb3cgZXJyO1xyXG4gIH0gZmluYWxseSB7XHJcbiAgICBjbGllbnQuZGVzdHJveSgpO1xyXG4gIH1cclxufTtcclxuXHJcbi8qKiBEZWxldGUgV29ya01haWwgT3JnYW5pemF0aW9uICovXHJcbmNvbnN0IGRlbGV0ZU9yZyA9IGFzeW5jIChyZWdpb246IHN0cmluZywgb3JnYW5pemF0aW9uSWQ6IHN0cmluZykgPT4ge1xyXG4gIGNvbnN0IGNsaWVudCA9IG5ldyBXb3JrTWFpbENsaWVudCh7IHJlZ2lvbiB9KTtcclxuICBjb25zdCBjbWQgPSBuZXcgRGVsZXRlT3JnYW5pemF0aW9uQ29tbWFuZCh7IE9yZ2FuaXphdGlvbklkOiBvcmdhbml6YXRpb25JZCwgRGVsZXRlRGlyZWN0b3J5OiB0cnVlIH0pO1xyXG4gIHRyeSB7XHJcbiAgICBhd2FpdCBjbGllbnQuc2VuZChjbWQpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH0gY2F0Y2ggKGVycikge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgdGhyb3cgZXJyO1xyXG4gIH0gZmluYWxseSB7XHJcbiAgICBjbGllbnQuZGVzdHJveSgpO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBoYW5kbGVyOiBDZGtDdXN0b21SZXNvdXJjZUhhbmRsZXIgPSBhc3luYyAoZXZlbnQsIF9jb250ZXh0KSA9PiB7XHJcbiAgY29uc3QgcmVnaW9uOiBzdHJpbmcgPSBldmVudC5SZXNvdXJjZVByb3BlcnRpZXMuUmVnaW9uO1xyXG4gIGNvbnN0IGFsaWFzOiBzdHJpbmcgPSBldmVudC5SZXNvdXJjZVByb3BlcnRpZXMuQWxpYXM7XHJcblxyXG4gIHN3aXRjaCAoZXZlbnQuUmVxdWVzdFR5cGUpIHtcclxuICAgIGNhc2UgJ0NyZWF0ZSc6IHtcclxuICAgICAgY29uc3Qgb3V0cHV0ID0gYXdhaXQgY3JlYXRlT3JnKHJlZ2lvbiwgYWxpYXMpO1xyXG4gICAgICByZXR1cm4geyBQaHlzaWNhbFJlc291cmNlSWQ6IG91dHB1dC5Pcmdhbml6YXRpb25JZCwgRGF0YTogb3V0cHV0IH07XHJcbiAgICB9XHJcbiAgICBjYXNlICdVcGRhdGUnOiB7XHJcbiAgICAgIGNvbnN0IG9sZE9yZ0lkOiBzdHJpbmcgPSBldmVudC5QaHlzaWNhbFJlc291cmNlSWQ7XHJcbiAgICAgIGNvbnN0IG91dHB1dCA9IGF3YWl0IGNyZWF0ZU9yZyhyZWdpb24sIGFsaWFzKTtcclxuICAgICAgYXdhaXQgZGVsZXRlT3JnKHJlZ2lvbiwgb2xkT3JnSWQpO1xyXG4gICAgICByZXR1cm4geyBQaHlzaWNhbFJlc291cmNlSWQ6IG91dHB1dC5Pcmdhbml6YXRpb25JZCwgRGF0YTogb3V0cHV0IH07XHJcbiAgICB9XHJcbiAgICBjYXNlICdEZWxldGUnOiB7XHJcbiAgICAgIGNvbnN0IG9sZE9yZ0lkOiBzdHJpbmcgPSBldmVudC5QaHlzaWNhbFJlc291cmNlSWQ7XHJcbiAgICAgIGF3YWl0IGRlbGV0ZU9yZyhyZWdpb24sIG9sZE9yZ0lkKTtcclxuICAgICAgcmV0dXJuIHt9O1xyXG4gICAgfVxyXG4gIH07XHJcbn07Il19